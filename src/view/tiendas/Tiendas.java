/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.tiendas;

import connection.DBConnection;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import model.ModelUniversal;
import view.productos.*;
import view.clientes.*;
import view.proveedor.Proveedores;

/**
 *
 * @author gonza
 */
public class Tiendas extends javax.swing.JInternalFrame {

    ModelUniversal modelUniversal = new ModelUniversal();
    private TableRowSorter trsFiltro;
    
    public Tiendas() {
        initComponents();
        this.setTitle("Regustro de tiendas");
        txtIdTienda.setVisible(false);
        txtNumTienda.setEditable(false);
        txtNumTienda.requestFocus();
        txtFiltroTienda.setText("");
        txtFiltroTienda.setPrompt("buscar por nombre");
        
        bloquearBtn();
        btnNuevoTienda.setEnabled(true);
     
        listarDatos();
        dobleClickTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNombreTienda = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDireccionTienda = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCodTienda = new javax.swing.JTextField();
        txtTelefonoTienda = new javax.swing.JTextField();
        txtIdTienda = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        btnNuevoTienda = new javax.swing.JButton();
        btnGuardarTienda = new javax.swing.JButton();
        btnEditarTienda = new javax.swing.JButton();
        btnEliminarTienda = new javax.swing.JButton();
        btnCancelarTienda = new javax.swing.JButton();
        txtFiltroTienda = new org.jdesktop.swingx.JXSearchField();
        jLabel9 = new javax.swing.JLabel();
        txtNumTienda = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableTienda = new javax.swing.JTable();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Código de tienda");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, -1, -1));

        jLabel2.setText("Nombre ");
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 40, -1, -1));

        txtNombreTienda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNombreTiendaFocusLost(evt);
            }
        });
        jPanel2.add(txtNombreTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 210, -1));

        jLabel3.setText("Dirección ");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, -1, -1));
        jPanel2.add(txtDireccionTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 70, 210, -1));

        jLabel4.setText("Teléfono");
        jPanel2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 100, -1, -1));

        txtCodTienda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodTienda.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodTiendaFocusLost(evt);
            }
        });
        jPanel2.add(txtCodTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 10, 90, -1));
        jPanel2.add(txtTelefonoTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 100, 150, -1));
        jPanel2.add(txtIdTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(670, 30, 30, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 760, 140));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnNuevoTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonNuevo.png"))); // NOI18N
        btnNuevoTienda.setBorder(null);
        btnNuevoTienda.setBorderPainted(false);
        btnNuevoTienda.setContentAreaFilled(false);
        btnNuevoTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoTiendaActionPerformed(evt);
            }
        });
        jPanel3.add(btnNuevoTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, -1, -1));

        btnGuardarTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonGuardar.png"))); // NOI18N
        btnGuardarTienda.setBorder(null);
        btnGuardarTienda.setBorderPainted(false);
        btnGuardarTienda.setContentAreaFilled(false);
        btnGuardarTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarTiendaActionPerformed(evt);
            }
        });
        jPanel3.add(btnGuardarTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 10, -1, -1));

        btnEditarTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonModificar.png"))); // NOI18N
        btnEditarTienda.setBorder(null);
        btnEditarTienda.setBorderPainted(false);
        btnEditarTienda.setContentAreaFilled(false);
        btnEditarTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarTiendaActionPerformed(evt);
            }
        });
        jPanel3.add(btnEditarTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 10, -1, 30));

        btnEliminarTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonEliminar.png"))); // NOI18N
        btnEliminarTienda.setBorder(null);
        btnEliminarTienda.setBorderPainted(false);
        btnEliminarTienda.setContentAreaFilled(false);
        btnEliminarTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarTiendaActionPerformed(evt);
            }
        });
        jPanel3.add(btnEliminarTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 10, -1, -1));

        btnCancelarTienda.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonCancelar.png"))); // NOI18N
        btnCancelarTienda.setBorder(null);
        btnCancelarTienda.setBorderPainted(false);
        btnCancelarTienda.setContentAreaFilled(false);
        btnCancelarTienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarTiendaActionPerformed(evt);
            }
        });
        jPanel3.add(btnCancelarTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 10, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 160, 760, 60));

        txtFiltroTienda.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFiltroTienda.setText("Buscar");
        txtFiltroTienda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroTiendaKeyTyped(evt);
            }
        });
        jPanel1.add(txtFiltroTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, 210, -1));

        jLabel9.setText("Cantidad de productos:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 230, -1, -1));
        jPanel1.add(txtNumTienda, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 230, 30, -1));

        tableTienda = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableTienda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableTienda.setFocusable(false);
        jScrollPane2.setViewportView(tableTienda);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 260, 760, 190));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 776, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarTiendaActionPerformed
        guardarTienda();
    }//GEN-LAST:event_btnGuardarTiendaActionPerformed

    private void btnCancelarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarTiendaActionPerformed
        limpiarCampos();
        bloquearBtn();
        btnNuevoTienda.setEnabled(true);
        txtNumTienda.requestFocus();
    }//GEN-LAST:event_btnCancelarTiendaActionPerformed

    private void btnNuevoTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoTiendaActionPerformed
        desbloquearBtn();
        btnNuevoTienda.setEnabled(false);
        btnEditarTienda.setEnabled(false);
        btnEliminarTienda.setEnabled(false);
        txtCodTienda.setText("001");
        
    }//GEN-LAST:event_btnNuevoTiendaActionPerformed

    private void btnEditarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarTiendaActionPerformed
        editarDatos();
        btnNuevoTienda.setEnabled(true);
    }//GEN-LAST:event_btnEditarTiendaActionPerformed

    private void txtCodTiendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodTiendaFocusLost
        modelUniversal.validarDatosRepetidos(txtCodTienda, tableTienda, 1, "Código");
    }//GEN-LAST:event_txtCodTiendaFocusLost

    private void txtNombreTiendaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNombreTiendaFocusLost
        modelUniversal.validarDatosRepetidos(txtNombreTienda, tableTienda, 2, "Nombre");
    }//GEN-LAST:event_txtNombreTiendaFocusLost

    private void btnEliminarTiendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarTiendaActionPerformed
        eliminarDatos();
    }//GEN-LAST:event_btnEliminarTiendaActionPerformed

    private void txtFiltroTiendaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroTiendaKeyTyped
        buscar();
    }//GEN-LAST:event_txtFiltroTiendaKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarTienda;
    private javax.swing.JButton btnEditarTienda;
    private javax.swing.JButton btnEliminarTienda;
    private javax.swing.JButton btnGuardarTienda;
    private javax.swing.JButton btnNuevoTienda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tableTienda;
    private javax.swing.JTextField txtCodTienda;
    private javax.swing.JTextField txtDireccionTienda;
    private org.jdesktop.swingx.JXSearchField txtFiltroTienda;
    private javax.swing.JTextField txtIdTienda;
    private javax.swing.JTextField txtNombreTienda;
    private javax.swing.JTextField txtNumTienda;
    private javax.swing.JTextField txtTelefonoTienda;
    // End of variables declaration//GEN-END:variables

    
    
    
    //-----------Guardar------------------------------    
    private void guardarTienda(){ 
        DBConnection conGuardar = new DBConnection();
        
        if(txtCodTienda.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese codigo", "Advertencia", JOptionPane.ERROR_MESSAGE);
            this.txtCodTienda.requestFocus();
        }else if(txtNombreTienda.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese nombre", "Advertencia", JOptionPane.ERROR_MESSAGE);
            this.txtNombreTienda.requestFocus();    
        }
        else{      
           try {
                String querty = "INSERT INTO relopsa.tiendas (codigo, nombre, direccion, telefono) VALUES (?,?,?,?)";
                PreparedStatement statement = conGuardar.connetion().prepareStatement(querty);
                statement.setString(1, txtCodTienda.getText());
                statement.setString(2, txtNombreTienda.getText());
                statement.setString(3, txtDireccionTienda.getText());
                statement.setString(4, txtTelefonoTienda.getText());
                statement.executeUpdate();
        
                JOptionPane.showMessageDialog(null, "Tienda ingresado correctamente");
                limpiarCampos();
                bloquearBtn();
                btnNuevoTienda.setEnabled(true);

            } catch (SQLException e) {
                System.out.println(e.getMessage() + e);
                JOptionPane.showMessageDialog(null, "Insercion no exitosa!", "Error", JOptionPane.ERROR);
            } finally {
                try {
                    conGuardar.closeConnection();
                    System.err.println("Conexion insertar cliente cerrada");
                } catch (SQLException ex) {
                    System.err.println(ex);
                   // Logger.getLogger(Clientes.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        listarDatos();
    }
    //-----------Fin Guardar-------------------------- 
    
     //------------Listar datos------------------------
    private final void listarDatos() {
        DBConnection conListar = new DBConnection();
        DefaultTableModel tableModel = new DefaultTableModel();

        tableModel.addColumn("ID");
        tableModel.addColumn("Codigo");
        tableModel.addColumn("Nombre");
        tableModel.addColumn("Dirección");
        tableModel.addColumn("Teléfono");
        tableTienda.setModel(tableModel);
        
        //        ocultamos la columna ID
        tableTienda.getColumnModel().getColumn(0).setMaxWidth(0);
        tableTienda.getColumnModel().getColumn(0).setMinWidth(0);
        tableTienda.getColumnModel().getColumn(0).setPreferredWidth(0);
        
          TableRowSorter<TableModel> ordertable = new TableRowSorter<>(tableModel);
            tableTienda.setRowSorter(ordertable);
            this.tableTienda.setModel(tableModel);

        String querty = "SELECT * FROM relopsa.tiendas";
        String datos[] = new String[5];

        try {
            Statement st = conListar.connetion().createStatement();
            ResultSet rs = st.executeQuery(querty);
           
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                datos[3] = rs.getString(4);
                datos[4] = rs.getString(5);
                tableModel.addRow(datos);
            
                txtNumTienda.setText(Integer.toString(modelUniversal.numeroDatosTabla(tableTienda)));
            }
            
            
            tableTienda.setModel(tableModel);

        } catch (SQLException e) {
            System.out.println(e.getMessage() + e);
            JOptionPane.showMessageDialog(null, "Insercion!", "Error", JOptionPane.ERROR);
        } finally {
            try {
                conListar.closeConnection();
                System.err.println("Conexion listar tienda cerrada");
            } catch (SQLException ex) {
                Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    //------------Fin Fistar datos--------------------
    
    //-----------Editar datos-------------------------
    public void editarDatos(){
        
        DBConnection conEditar = new DBConnection();
        String querty = "UPDATE relopsa.tiendas SET codigo=?, nombre=?, direccion=?, telefono=? WHERE tiendas_id=?";
        
        if(txtCodTienda.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese codigo", "Advertencia", JOptionPane.ERROR_MESSAGE);
            this.txtCodTienda.requestFocus();
        }else if(txtNombreTienda.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Ingrese nombre", "Advertencia", JOptionPane.ERROR_MESSAGE);
            this.txtNombreTienda.requestFocus();    
        }else {
            try {
                PreparedStatement statement = conEditar.connetion().prepareStatement(querty);
                
                statement.setString(1, txtCodTienda.getText());
                statement.setString(2, txtNombreTienda.getText());
                statement.setString(3, txtDireccionTienda.getText());
                statement.setString(4, txtTelefonoTienda.getText());
                statement.setString(5, txtIdTienda.getText());
                
                statement.executeUpdate();
               // System.err.println(querty);
                JOptionPane.showMessageDialog(null, "Tienda Modificado!");
                listarDatos();
                limpiarCampos();
                bloquearBtn();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "Insercion no exitosa!");
            } finally {
                try {
                    conEditar.closeConnection();
                    System.err.println("Conexion editar cliente cerrada");
                } catch (SQLException ex) {
                    Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    //-----------Fin editar datos---------------------
    
    //-----------Eliminar datos-----------------------
    public void eliminarDatos(){
        DBConnection conDelete = new DBConnection();
        String id = txtIdTienda.getText();
        String querty = "DELETE FROM relopsa.tiendas WHERE tiendas_id=?";
        
        int option = JOptionPane.showConfirmDialog(null, "Desea elminar tienda?","Eliminar",JOptionPane.YES_NO_OPTION); 
        
        if (option == 0) {
            
            try {
                PreparedStatement statement = conDelete.connetion().prepareStatement(querty);
                statement.setString(1, id);
                statement.executeLargeUpdate();
                JOptionPane.showMessageDialog(null, "Tienda eliminada");
                limpiarCampos();
                bloquearBtn();
                btnNuevoTienda.setEnabled(true);
                listarDatos();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar tienda");
            } finally{
                try {
                    conDelete.closeConnection();
                } catch (SQLException ex) {
                    Logger.getLogger(Proveedores.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else {
            limpiarCampos();
            bloquearBtn();
            btnNuevoTienda.setEnabled(true);
        }
        
    }
    //----------Fin Eliminar datos
    
    
    
    private void limpiarCampos(){
        txtCodTienda.setText("");
        txtNombreTienda.setText("");
        txtDireccionTienda.setText("");
        txtTelefonoTienda.setText("");
    }
    
    private void bloquearBtn(){
        txtCodTienda.setEnabled(false);
        txtNombreTienda.setEnabled(false);
        txtDireccionTienda.setEnabled(false);
        txtTelefonoTienda.setEnabled(false);
        
        btnNuevoTienda.setEnabled(false);
        btnGuardarTienda.setEnabled(false);
        btnEditarTienda.setEnabled(false);
        btnEliminarTienda.setEnabled(false);
        btnCancelarTienda.setEnabled(false);
    }
    
    private void desbloquearBtn(){
        txtCodTienda.setEnabled(true);
        txtNombreTienda.setEnabled(true);
        txtDireccionTienda.setEnabled(true);
        txtTelefonoTienda.setEnabled(true);
        
        btnNuevoTienda.setEnabled(true);
        btnGuardarTienda.setEnabled(true);
        btnEditarTienda.setEnabled(true);
        btnEliminarTienda.setEnabled(true);
        btnCancelarTienda.setEnabled(true);
    }
    
    public final void dobleClickTabla() {

        tableTienda.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    //System.err.println("Dos clicks");
                    desbloquearBtn();
                    btnNuevoTienda.setEnabled(false);
                    btnGuardarTienda.setEnabled(false);

                    int fila = tableTienda.getSelectedRow();
                    // System.err.println("fila: " + fila);
                    txtIdTienda.setText(tableTienda.getValueAt(fila, 0).toString());
                    txtCodTienda.setText(tableTienda.getValueAt(fila, 1).toString());
                    txtNombreTienda.setText(tableTienda.getValueAt(fila, 2).toString());
                    txtDireccionTienda.setText(tableTienda.getValueAt(fila, 3).toString());
                    txtTelefonoTienda.setText(tableTienda.getValueAt(fila, 4).toString());
                }
            }
        });
    }
    
     public void buscar(){
        txtFiltroTienda.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtFiltroTienda.getText());
                txtFiltroTienda.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tableTienda.getModel());
        tableTienda.setRowSorter(trsFiltro);
    }
       
    public void filtro() {
        int columnaABuscar = 1;
        trsFiltro.setRowFilter(RowFilter.regexFilter(txtFiltroTienda.getText(), columnaABuscar));
    }
}
