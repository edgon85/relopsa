/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.usuario;

import connection.DBConnection;
import model.ModelUniversal;
import view.principal.GeneratePassUser;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import validaciones.EmailValidator;


public class Usuarios extends javax.swing.JInternalFrame {

    
    
    ModelUniversal modelUniversal = new ModelUniversal();
    private TableRowSorter trsFiltro;
    
    public Usuarios() {
        initComponents();
        this.setTitle("Registro de usuarios");
        oculatarMensajes();

        this.jComboBoxCargo.addItem("- Seleccionar -");
        this.jComboBoxCargo.addItem("Administrador");
        this.jComboBoxCargo.addItem("Vendedor");

        this.jComboBoxEstado.addItem("- Seleccionar -");
        this.jComboBoxEstado.addItem("Activo");
        this.jComboBoxEstado.addItem("Inactivo");

        this.jComboBoxTienda.addItem("- Seleccionar -");
        this.jComboBoxTienda.addItem("Tienda 1");

        
        bloquearBtn();
        
        listar();
        dobleClickTabla();  
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupBuscar = new javax.swing.ButtonGroup();
        jPanelContentUser = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDpi = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtLastName = new javax.swing.JTextField();
        txtAddres = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jComboBoxCargo = new javax.swing.JComboBox<>();
        jComboBoxEstado = new javax.swing.JComboBox<>();
        jComboBoxTienda = new javax.swing.JComboBox<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtUser = new javax.swing.JTextField();
        txtPassword = new javax.swing.JTextField();
        btnGenerateUser = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtIdUser = new javax.swing.JTextField();
        mensaje01 = new javax.swing.JLabel();
        mensaje02 = new javax.swing.JLabel();
        mensaje03 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        btnAddUsers = new javax.swing.JButton();
        btnSaveUser = new javax.swing.JButton();
        btnEditUser = new javax.swing.JButton();
        btnDeleteUser = new javax.swing.JButton();
        btnCancelUser = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        txtNumEmpleados = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableUsuarios = new javax.swing.JTable();
        radioButtonNombre = new javax.swing.JRadioButton();
        radioButtonUsuario = new javax.swing.JRadioButton();
        radioButtonDpi = new javax.swing.JRadioButton();
        txtFiltroUsuarios = new org.jdesktop.swingx.JXSearchField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("usuarios");

        jPanelContentUser.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("DPI :");

        jLabel2.setText("Nombres :");

        jLabel3.setText("Apellidos :");

        jLabel4.setText("Dirección :");

        jLabel5.setText("Correo Electrónico :");

        jLabel6.setText("Celular :");

        txtDpi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtDpiKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDpiKeyTyped(evt);
            }
        });

        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtEmailKeyTyped(evt);
            }
        });

        txtPhone.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPhoneKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPhoneKeyTyped(evt);
            }
        });

        jLabel7.setText("Cargo :");

        jLabel8.setText("Estado :");

        jLabel9.setText("Tienda:");

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setText("Usuario :");

        jLabel11.setText("Contraseña:");

        btnGenerateUser.setText("GENERAR");
        btnGenerateUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerateUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtUser)
                    .addComponent(txtPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(127, Short.MAX_VALUE)
                .addComponent(btnGenerateUser)
                .addGap(49, 49, 49))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnGenerateUser)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel13.setText("*");

        jLabel14.setText("*");

        jLabel15.setText("*");

        jLabel16.setText("*");

        jLabel17.setText("*");

        jLabel18.setText("*");

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 8)); // NOI18N
        jLabel19.setText("(*) campos obligatorios");

        mensaje01.setForeground(new java.awt.Color(255, 0, 0));
        mensaje01.setText("El DPI debe tener 13 digitos");

        mensaje02.setForeground(new java.awt.Color(255, 0, 0));
        mensaje02.setText("El celular debe tener 8 digitos");

        mensaje03.setForeground(new java.awt.Color(255, 0, 0));
        mensaje03.setText("ejemplo@correo.com");

        javax.swing.GroupLayout jPanelContentUserLayout = new javax.swing.GroupLayout(jPanelContentUser);
        jPanelContentUser.setLayout(jPanelContentUserLayout);
        jPanelContentUserLayout.setHorizontalGroup(
            jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContentUserLayout.createSequentialGroup()
                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanelContentUserLayout.createSequentialGroup()
                            .addGap(58, 58, 58)
                            .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1)))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelContentUserLayout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabel6)))
                    .addGroup(jPanelContentUserLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel19))))
                .addGap(18, 18, 18)
                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContentUserLayout.createSequentialGroup()
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtDpi)
                            .addComponent(txtName)
                            .addComponent(txtLastName)
                            .addComponent(txtEmail)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelContentUserLayout.createSequentialGroup()
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mensaje01))
                            .addComponent(jLabel14)
                            .addComponent(jLabel15)
                            .addComponent(mensaje02)
                            .addComponent(mensaje03)))
                    .addComponent(txtAddres, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContentUserLayout.createSequentialGroup()
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jComboBoxCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxEstado, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jComboBoxTienda, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel18)))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanelContentUserLayout.setVerticalGroup(
            jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelContentUserLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelContentUserLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(jComboBoxCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBoxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jComboBoxTienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel18))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanelContentUserLayout.createSequentialGroup()
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtDpi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13)
                            .addComponent(mensaje01))
                        .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelContentUserLayout.createSequentialGroup()
                                .addGap(77, 77, 77)
                                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanelContentUserLayout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel15))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtAddres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel5))
                                    .addComponent(mensaje03, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)
                                    .addComponent(mensaje02))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 16, Short.MAX_VALUE)
                                .addGroup(jPanelContentUserLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel19)
                                    .addComponent(txtIdUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(14, 14, 14))))))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnAddUsers.setBackground(new java.awt.Color(0, 51, 255));
        btnAddUsers.setForeground(new java.awt.Color(255, 255, 255));
        btnAddUsers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonNuevo.png"))); // NOI18N
        btnAddUsers.setBorder(null);
        btnAddUsers.setBorderPainted(false);
        btnAddUsers.setContentAreaFilled(false);
        btnAddUsers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddUsersActionPerformed(evt);
            }
        });

        btnSaveUser.setBackground(new java.awt.Color(0, 51, 255));
        btnSaveUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonGuardar.png"))); // NOI18N
        btnSaveUser.setBorder(null);
        btnSaveUser.setBorderPainted(false);
        btnSaveUser.setContentAreaFilled(false);
        btnSaveUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveUserActionPerformed(evt);
            }
        });

        btnEditUser.setBackground(new java.awt.Color(0, 51, 255));
        btnEditUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonModificar.png"))); // NOI18N
        btnEditUser.setBorder(null);
        btnEditUser.setBorderPainted(false);
        btnEditUser.setContentAreaFilled(false);
        btnEditUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditUserActionPerformed(evt);
            }
        });

        btnDeleteUser.setBackground(new java.awt.Color(204, 0, 0));
        btnDeleteUser.setForeground(new java.awt.Color(255, 255, 255));
        btnDeleteUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonEliminar.png"))); // NOI18N
        btnDeleteUser.setBorder(null);
        btnDeleteUser.setBorderPainted(false);
        btnDeleteUser.setContentAreaFilled(false);
        btnDeleteUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteUserActionPerformed(evt);
            }
        });

        btnCancelUser.setBackground(new java.awt.Color(204, 0, 0));
        btnCancelUser.setForeground(new java.awt.Color(255, 255, 255));
        btnCancelUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonCancelar.png"))); // NOI18N
        btnCancelUser.setBorder(null);
        btnCancelUser.setBorderPainted(false);
        btnCancelUser.setContentAreaFilled(false);
        btnCancelUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelUserActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(btnAddUsers)
                .addGap(18, 18, 18)
                .addComponent(btnSaveUser)
                .addGap(18, 18, 18)
                .addComponent(btnEditUser)
                .addGap(18, 18, 18)
                .addComponent(btnDeleteUser)
                .addGap(18, 18, 18)
                .addComponent(btnCancelUser)
                .addContainerGap(39, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAddUsers, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnSaveUser)
                    .addComponent(btnEditUser)
                    .addComponent(btnDeleteUser, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCancelUser))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setText("N° de empleados :");

        txtNumEmpleados.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        tableUsuarios = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableUsuarios.setFocusable(false);
        tableUsuarios.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(tableUsuarios);

        radioButtonNombre.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        radioButtonNombre.setText("Nombre");

        radioButtonUsuario.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        radioButtonUsuario.setText("Usuario");

        radioButtonDpi.setFont(new java.awt.Font("Dialog", 0, 10)); // NOI18N
        radioButtonDpi.setText("DPI");

        txtFiltroUsuarios.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtFiltroUsuarios.setText("Buscar");
        txtFiltroUsuarios.setToolTipText("Buscar");
        txtFiltroUsuarios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtFiltroUsuariosKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanelContentUser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(txtFiltroUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioButtonNombre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioButtonUsuario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(radioButtonDpi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanelContentUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFiltroUsuarios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(radioButtonDpi)
                        .addComponent(radioButtonNombre)
                        .addComponent(radioButtonUsuario)
                        .addComponent(jLabel12)
                        .addComponent(txtNumEmpleados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddUsersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddUsersActionPerformed
        desbloquearBtn();
    }//GEN-LAST:event_btnAddUsersActionPerformed

    private void btnCancelUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelUserActionPerformed
        limpiarBtn();
        bloquearBtn();
    }//GEN-LAST:event_btnCancelUserActionPerformed

    private void btnEditUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditUserActionPerformed
            modificar();
    }//GEN-LAST:event_btnEditUserActionPerformed

    private void btnDeleteUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteUserActionPerformed
        eliminar();
    }//GEN-LAST:event_btnDeleteUserActionPerformed

    private void btnGenerateUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerateUserActionPerformed
        generartePassUser();
    }//GEN-LAST:event_btnGenerateUserActionPerformed

    private void btnSaveUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveUserActionPerformed
            registrar();
    }//GEN-LAST:event_btnSaveUserActionPerformed

    private void txtDpiKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDpiKeyReleased
        if (!txtDpi.getText().matches("[0-9--]*")) {
            JOptionPane.showMessageDialog(null, "Solo se permite números","Advertencia",JOptionPane.ERROR_MESSAGE);
            txtDpi.setText("");
            txtDpi.requestFocus();
        }
    }//GEN-LAST:event_txtDpiKeyReleased

    private void txtDpiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDpiKeyTyped
        if (txtDpi.getText().length() == 13) {
            mensaje01.setVisible(true);
            txtDpi.setText("");
            txtDpi.requestFocus();
            evt.consume();
        }else if(txtDpi.getText().length() == 12){
            mensaje01.setVisible(false);
        }
    }//GEN-LAST:event_txtDpiKeyTyped

    private void txtPhoneKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyReleased
        if (!txtPhone.getText().matches("[0-9--]*")) {
            JOptionPane.showMessageDialog(null, "Solo se permite números","Advertencia",JOptionPane.ERROR_MESSAGE);
            txtPhone.setText("");
            txtPhone.requestFocus();
        }
    }//GEN-LAST:event_txtPhoneKeyReleased

    private void txtPhoneKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPhoneKeyTyped
        if (txtPhone.getText().length() == 8) {
            mensaje02.setVisible(true);
            txtPhone.setText("");
            txtPhone.requestFocus();
            evt.consume();
        }else if(txtPhone.getText().length() == 7){
            mensaje02.setVisible(false);
        }
    }//GEN-LAST:event_txtPhoneKeyTyped

    private void txtEmailKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyTyped
         EmailValidator emailValidator = new EmailValidator();
        if (!emailValidator.validate(txtEmail.getText().trim())) {
            mensaje03.setVisible(true);
           //JOptionPane.showMessageDialog(null, "Correo Invalido");
           //txtCorreoProv.requestFocus();
        }else{
            mensaje03.setVisible(false);
        }
    }//GEN-LAST:event_txtEmailKeyTyped

    private void txtFiltroUsuariosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtFiltroUsuariosKeyTyped
        buscar();
    }//GEN-LAST:event_txtFiltroUsuariosKeyTyped


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddUsers;
    private javax.swing.JButton btnCancelUser;
    private javax.swing.JButton btnDeleteUser;
    private javax.swing.JButton btnEditUser;
    private javax.swing.JButton btnGenerateUser;
    private javax.swing.JButton btnSaveUser;
    private javax.swing.ButtonGroup buttonGroupBuscar;
    private javax.swing.JComboBox<String> jComboBoxCargo;
    private javax.swing.JComboBox<String> jComboBoxEstado;
    private javax.swing.JComboBox<String> jComboBoxTienda;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanelContentUser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel mensaje01;
    private javax.swing.JLabel mensaje02;
    private javax.swing.JLabel mensaje03;
    private javax.swing.JRadioButton radioButtonDpi;
    private javax.swing.JRadioButton radioButtonNombre;
    private javax.swing.JRadioButton radioButtonUsuario;
    private javax.swing.JTable tableUsuarios;
    private javax.swing.JTextField txtAddres;
    private javax.swing.JTextField txtDpi;
    private javax.swing.JTextField txtEmail;
    private org.jdesktop.swingx.JXSearchField txtFiltroUsuarios;
    private javax.swing.JTextField txtIdUser;
    private javax.swing.JTextField txtLastName;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtNumEmpleados;
    private javax.swing.JTextField txtPassword;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtUser;
    // End of variables declaration//GEN-END:variables

   
    public void registrar() {
        DBConnection conRegistrar = new DBConnection();
        String querty = "INSERT INTO relopsa.users (dpi, first_name, second_name, address, email, phone, user_type, estado, user, password) VALUES (?,?,?,?,?,?,?,?,?,?)";       
        try {
           if (txtDpi.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese DPI", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtDpi.requestFocus();
            } else if (txtName.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Nombre", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtName.requestFocus();
            } else if (txtLastName.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Apellido", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtLastName.requestFocus();
            } else if (txtAddres.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Direccion", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtAddres.requestFocus();
            } else if (txtEmail.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Email", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtEmail.requestFocus();
            } else if (txtPhone.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Numero de telefono", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtPhone.requestFocus();
            } else if (txtUser.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Usuario", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtUser.requestFocus();
            } else if (txtPassword.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Contraseña", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtPassword.requestFocus();
            } else if (jComboBoxCargo.getSelectedItem().toString().equals("- Seleccionar -")) {
                JOptionPane.showMessageDialog(null, "Seleccione Cargo", "Advertencia", JOptionPane.ERROR_MESSAGE);
                jComboBoxCargo.requestFocus();
            } else if (jComboBoxEstado.getSelectedItem().toString().equals("- Seleccionar -")) {
                JOptionPane.showMessageDialog(null, "Seleccione Estado", "Advertencia", JOptionPane.ERROR_MESSAGE);
                jComboBoxEstado.requestFocus();
            } else if (jComboBoxTienda.getSelectedItem().toString().equals("- Seleccionar -")) {
                JOptionPane.showMessageDialog(null, "Seleccione Tienda", "Advertencia", JOptionPane.ERROR_MESSAGE);
                jComboBoxTienda.requestFocus();
            } else {            
                PreparedStatement statement = conRegistrar.connetion().prepareStatement(querty);
                statement.setString(1, txtDpi.getText());
                statement.setString(2, txtName.getText());
                statement.setString(3, txtLastName.getText());
                statement.setString(4, txtAddres.getText());
                statement.setString(5, txtEmail.getText());
                statement.setString(6, txtPhone.getText());
                
                statement.setString(7, jComboBoxCargo.getSelectedItem().toString());
                statement.setString(8, jComboBoxEstado.getSelectedItem().toString());
                
                statement.setString(9, txtUser.getText());
                statement.setString(10, txtPassword.getText());  
                
                statement.executeUpdate();
                JOptionPane.showMessageDialog(null, "Usuario Creado con éxito");
                limpiarBtn();
                bloquearBtn();
            }
          
        } catch (SQLException e) {
            System.out.println(e.getMessage() + e);
            JOptionPane.showMessageDialog(null, "Insercion no exitosa!");
        } finally {
            try {
                System.err.println("Conexion agregar usuario cerrado");
                conRegistrar.closeConnection();
            } catch (SQLException ex) {
                Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        listar();
    }

  
    public void modificar(){
         DBConnection conEditar = new DBConnection();
        
        try {
            if (txtDpi.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese DPI", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtDpi.requestFocus();
            } else if (txtName.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Nombre", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtName.requestFocus();
            } else if (txtLastName.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Apellido", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtLastName.requestFocus();
            } else if (txtAddres.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Direccion", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtAddres.requestFocus();
            } else if (txtEmail.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Email", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtEmail.requestFocus();
            } else if (txtPhone.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Numero de telefono", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtPhone.requestFocus();
            } else if (txtUser.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Usuario", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtUser.requestFocus();
            } else if (txtPassword.getText().equals("")) {
                JOptionPane.showMessageDialog(null, "Ingrese Contraseña", "Advertencia", JOptionPane.ERROR_MESSAGE);
                txtPassword.requestFocus();
            } else if (jComboBoxCargo.getSelectedItem().toString().equals("- Seleccionar -")) {
                JOptionPane.showMessageDialog(null, "Seleccione Cargo", "Advertencia", JOptionPane.ERROR_MESSAGE);
                jComboBoxCargo.requestFocus();
            } else if (jComboBoxEstado.getSelectedItem().toString().equals("- Seleccionar -")) {
                JOptionPane.showMessageDialog(null, "Seleccione Estado", "Advertencia", JOptionPane.ERROR_MESSAGE);
                jComboBoxEstado.requestFocus();
            } else if (jComboBoxTienda.getSelectedItem().toString().equals("- Seleccionar -")) {
                JOptionPane.showMessageDialog(null, "Seleccione Tienda", "Advertencia", JOptionPane.ERROR_MESSAGE);
                jComboBoxTienda.requestFocus();
            } else {
             
        PreparedStatement statement = conEditar.connetion().prepareStatement(
                "UPDATE relopsa.users SET dpi=?, first_name=?, second_name=?, address=?, email=?, phone=?, user_type=?, estado=?, user=?, password=? WHERE users_id=? ");
       
        //set parameters statements        
                statement.setString(1, txtDpi.getText());
                statement.setString(2, txtName.getText());
                statement.setString(3, txtLastName.getText());
                statement.setString(4, txtAddres.getText());
                statement.setString(5, txtEmail.getText());
                statement.setString(6, txtPhone.getText());
                
                statement.setString(7, jComboBoxCargo.getSelectedItem().toString());
                statement.setString(8, jComboBoxEstado.getSelectedItem().toString());
                
                statement.setString(9, txtUser.getText());
                statement.setString(10, txtPassword.getText());
                statement.setString(11,txtIdUser.getText());  
                
                statement.executeUpdate();
               // System.err.println(querty);
                JOptionPane.showMessageDialog(null, "Usuario Modificado!");
                listar();
                limpiarBtn();       
                bloquearBtn();
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(null, "Insercion no exitosa!");
        }finally {
                try {
                    conEditar.closeConnection();
                    System.err.println("Conexion eitar usuarios cerrada");
                } catch (SQLException ex) {
                    Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
    }


    public void eliminar(){
        DBConnection conDelete = new DBConnection();
        
        String id = txtIdUser.getText();
        int option = JOptionPane.showConfirmDialog(null, "Desea eliminar este Usuario?","Eliminar",JOptionPane.YES_NO_OPTION); 
        
        if (option == 0) {
            try {
                String querty = "DELETE FROM relopsa.users WHERE users_id=? ";
                PreparedStatement statement = conDelete.connetion().prepareStatement(querty);
                System.err.println(id);
                statement.setString(1, id);
                statement.executeLargeUpdate();
                JOptionPane.showMessageDialog(null, "Usuario eliminado");
                limpiarBtn();
                bloquearBtn();
                listar();
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "No se pudo eliminar");
            } finally{
                try {
                    System.err.println("Conexion eliminar usuario cerrada");
                    conDelete.closeConnection();
                } catch (SQLException ex) {
                    Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }else{
            limpiarBtn();
            bloquearBtn();
        }
    }

    
     public final void listar()  {
        DBConnection conListar = new DBConnection();
        DefaultTableModel tableModel = new DefaultTableModel();
        
        
        tableModel.addColumn("DPI");
        tableModel.addColumn("Nombre");
        tableModel.addColumn("Apellido");
        tableModel.addColumn("Usuario");
        tableModel.addColumn("Direccion");
        tableModel.addColumn("Correo");
        tableModel.addColumn("Telefono");
        tableModel.addColumn("Cargo");
        tableModel.addColumn("Estado");
        tableModel.addColumn("ID"); 
        tableUsuarios.setModel(tableModel);
        
//        ocultamos la columna ID
        tableUsuarios.getColumnModel().getColumn(9).setMaxWidth(0);
        tableUsuarios.getColumnModel().getColumn(9).setMinWidth(0);
        tableUsuarios.getColumnModel().getColumn(9).setPreferredWidth(0);
        
        //alinear columnas
        TableRowSorter<TableModel> ordertable = new TableRowSorter<>(tableModel);
        tableUsuarios.setRowSorter(ordertable);
        this.tableUsuarios.setModel(tableModel);
        
        
        String sql = "SELECT * FROM relopsa.users";
        String data[] = new String[10];
        
        try {
            
            //PreparedStatement statement = cc.prepareStatement(sql);
            //ResultSet rs = statement.executeQuery();
            
            Statement statement = conListar.connetion().createStatement();
            ResultSet rs = statement.executeQuery(sql); 
           
            while (rs.next()) {                
                data[0] = rs.getString(2); //dpi
                data[1] = rs.getString(3); //first name
                data[2] = rs.getString(4); //last name
                data[3] = rs.getString(10); //user
                data[4] = rs.getString(5); //addres
                data[5] = rs.getString(6); //email
                data[6] = rs.getString(7); //phone
                data[7] = rs.getString(8); //cargo
                data[8] = rs.getString(9); //estad
                data[9] = rs.getString(1); //estad
                tableModel.addRow(data);
                
                txtNumEmpleados.setText(Integer.toString(modelUniversal.numeroDatosTabla(tableUsuarios)));
                
            }
            tableUsuarios.setModel(tableModel);
         
        } catch (SQLException e) {
            System.out.println(e.getMessage() + e);
            JOptionPane.showMessageDialog(null, "Insercion!", "Error", JOptionPane.ERROR);
        } finally {
            try {
                conListar.closeConnection();
                System.err.println("Conexion listar usuario cerrada");
            } catch (SQLException ex) {
                Logger.getLogger(Usuarios.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
 
    public void limpiarBtn() {
        txtDpi.setText("");
        txtName.setText("");
        txtLastName.setText("");
        txtAddres.setText("");
        txtEmail.setText("");
        txtPhone.setText("");
        txtUser.setText("");
        txtPassword.setText("");
        
        txtFiltroUsuarios.setText("");
        radioButtonNombre.requestFocus();
        radioButtonNombre.setSelected(true);
    }

    public final void bloquearBtn() {
        txtDpi.setEnabled(false);
        txtName.setEnabled(false);
        txtLastName.setEnabled(false);
        txtAddres.setEnabled(false);
        txtEmail.setEnabled(false);
        txtPhone.setEnabled(false);
        txtUser.setEnabled(false);
        txtPassword.setEnabled(false);
        
        jComboBoxCargo.setEnabled(false);
        jComboBoxEstado.setEnabled(false);
        jComboBoxTienda.setEnabled(false);
        
        btnAddUsers.setEnabled(true);
        btnSaveUser.setEnabled(false);
        btnEditUser.setEnabled(false);
        btnDeleteUser.setEnabled(false);
        btnCancelUser.setEnabled(false);
        btnGenerateUser.setEnabled(false);
    }


    public void desbloquearBtn() {
       txtDpi.setEnabled(true);
        txtName.setEnabled(true);
        txtLastName.setEnabled(true);
        txtAddres.setEnabled(true);
        txtEmail.setEnabled(true);
        txtPhone.setEnabled(true);
        txtUser.setEnabled(true);
        txtPassword.setEnabled(true);
        
        jComboBoxCargo.setEnabled(true);
        jComboBoxEstado.setEnabled(true);
        jComboBoxTienda.setEnabled(true);
        
        btnAddUsers.setEnabled(false);
        btnSaveUser.setEnabled(true);
        btnEditUser.setEnabled(false);
        btnDeleteUser.setEnabled(false);
        btnCancelUser.setEnabled(true);
        btnGenerateUser.setEnabled(true);
    }

    public void generartePassUser(){
     GeneratePassUser key = new GeneratePassUser();
     String name = txtName.getText();
     String lastName = txtLastName.getText();
     String dpi = txtDpi.getText();
        try {
            if (name.equals("") || lastName.equals("") || dpi.equals("")) {
            JOptionPane.showMessageDialog(null,"Campos Vacios","Advertencia",JOptionPane.ERROR_MESSAGE);
        }else{
            txtUser.setText(key.generateUser(name, lastName));
            txtPassword.setText(key.generatePass(name,lastName, dpi));
        }
        } catch (Exception e) {
            System.err.println("no se puede generar! " + e);
        }
    }
    
    public final void oculatarMensajes(){
        mensaje01.setVisible(false);
        mensaje02.setVisible(false);
        mensaje03.setVisible(false);
        this.txtIdUser.setEnabled(false);
        this.txtIdUser.setVisible(false);
        txtNumEmpleados.setEditable(false);
        
        txtFiltroUsuarios.setText("");
        txtFiltroUsuarios.setPrompt("buscar");
        radioButtonNombre.requestFocus();
        radioButtonNombre.setSelected(true);
    }
    
    public final void dobleClickTabla() {

        tableUsuarios.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    desbloquearBtn();
                    btnAddUsers.setEnabled(false);
                    btnSaveUser.setEnabled(false);
                    btnEditUser.setEnabled(true);
                    btnDeleteUser.setEnabled(true);
                    btnCancelUser.setEnabled(true);
                    txtPassword.setText("");

                    int fila = tableUsuarios.getSelectedRow();
                    txtDpi.setText(tableUsuarios.getValueAt(fila, 0).toString());
                    txtName.setText(tableUsuarios.getValueAt(fila, 1).toString());
                    txtLastName.setText(tableUsuarios.getValueAt(fila, 2).toString());
                    txtUser.setText(tableUsuarios.getValueAt(fila, 3).toString());
                    txtAddres.setText(tableUsuarios.getValueAt(fila, 4).toString());
                    txtEmail.setText(tableUsuarios.getValueAt(fila, 5).toString());
                    txtPhone.setText(tableUsuarios.getValueAt(fila, 6).toString());
                    txtIdUser.setText(tableUsuarios.getValueAt(fila, 9).toString());

                    jComboBoxCargo.setSelectedItem(tableUsuarios.getValueAt(fila, 7).toString());
                    jComboBoxEstado.setSelectedItem(tableUsuarios.getValueAt(fila, 8).toString());
                }
            }
        });
    }

    private void buscar() {
        txtFiltroUsuarios.addKeyListener(new KeyAdapter() {
            @Override
            public void keyReleased(final KeyEvent e) {
                String cadena = (txtFiltroUsuarios.getText());
                txtFiltroUsuarios.setText(cadena);
                repaint();
                filtro();
            }
        });
        trsFiltro = new TableRowSorter(tableUsuarios.getModel());
        tableUsuarios.setRowSorter(trsFiltro);
    }
    
    private void filtro(){
        buttonGroupBuscar.add(radioButtonNombre);
        buttonGroupBuscar.add(radioButtonUsuario);
        buttonGroupBuscar.add(radioButtonDpi);
        int columnaABuscar = 0;
        
        if (radioButtonNombre.isSelected()) {
            columnaABuscar = 1;
        }
        if (radioButtonUsuario.isSelected()) {
            columnaABuscar = 3;
        }
        if (radioButtonDpi.isSelected()) {
            columnaABuscar = 0;
        }
        trsFiltro.setRowFilter(RowFilter.regexFilter(txtFiltroUsuarios.getText(), columnaABuscar));
    }
}
