/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view.categorias;

import connection.DBConnection;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author gonza
 */
public class Categorias extends javax.swing.JInternalFrame {

    /**
     * Creates new form Categorias
     */
    public Categorias() {
        initComponents();
        this.setTitle("Ingeso de Categorias");
        
        listarDatos();
        dobleClickTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtCodigoCat = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtNombreCat = new javax.swing.JTextField();
        txtIDCategoria = new javax.swing.JTextField();
        btnEliminarCat = new javax.swing.JPanel();
        btnGuardarCat = new javax.swing.JButton();
        btnModificarCat = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        btnCancelarCat = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableCategoria = new javax.swing.JTable();

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("CÃ³digo: ");

        jLabel2.setText("Nombre:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtCodigoCat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtIDCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtNombreCat, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 342, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtCodigoCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIDCategoria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNombreCat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 610, 90));

        btnEliminarCat.setBackground(new java.awt.Color(255, 255, 255));
        btnEliminarCat.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnGuardarCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonGuardar.png"))); // NOI18N
        btnGuardarCat.setBorder(null);
        btnGuardarCat.setBorderPainted(false);
        btnGuardarCat.setContentAreaFilled(false);
        btnGuardarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCatActionPerformed(evt);
            }
        });

        btnModificarCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonModificar.png"))); // NOI18N
        btnModificarCat.setBorder(null);
        btnModificarCat.setBorderPainted(false);
        btnModificarCat.setContentAreaFilled(false);
        btnModificarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarCatActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonEliminar.png"))); // NOI18N
        jButton3.setBorder(null);
        jButton3.setBorderPainted(false);
        jButton3.setContentAreaFilled(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnCancelarCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/iconos/buttonCancelar.png"))); // NOI18N
        btnCancelarCat.setBorder(null);
        btnCancelarCat.setBorderPainted(false);
        btnCancelarCat.setContentAreaFilled(false);
        btnCancelarCat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout btnEliminarCatLayout = new javax.swing.GroupLayout(btnEliminarCat);
        btnEliminarCat.setLayout(btnEliminarCatLayout);
        btnEliminarCatLayout.setHorizontalGroup(
            btnEliminarCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEliminarCatLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnGuardarCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificarCat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCancelarCat)
                .addContainerGap(10, Short.MAX_VALUE))
        );
        btnEliminarCatLayout.setVerticalGroup(
            btnEliminarCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(btnEliminarCatLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(btnEliminarCatLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificarCat, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnCancelarCat, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnGuardarCat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(btnEliminarCat, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 120, 610, -1));

        tableCategoria = new javax.swing.JTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableCategoria.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableCategoria.setFocusable(false);
        jScrollPane1.setViewportView(tableCategoria);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 170, 610, 180));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 628, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 359, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGuardarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCatActionPerformed
        guardarCategoria();
    }//GEN-LAST:event_btnGuardarCatActionPerformed

    private void btnCancelarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCatActionPerformed
        limpiar();
        btnGuardarCat.setEnabled(true);
//        this.dispose();
    }//GEN-LAST:event_btnCancelarCatActionPerformed

    private void btnModificarCatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarCatActionPerformed
        editarDatos();
    }//GEN-LAST:event_btnModificarCatActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        eliminarDatos();
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelarCat;
    private javax.swing.JPanel btnEliminarCat;
    private javax.swing.JButton btnGuardarCat;
    private javax.swing.JButton btnModificarCat;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableCategoria;
    private javax.swing.JTextField txtCodigoCat;
    private javax.swing.JTextField txtIDCategoria;
    private javax.swing.JTextField txtNombreCat;
    // End of variables declaration//GEN-END:variables

    public void guardarCategoria() {
        DBConnection conGuardar = new DBConnection();
        String querty = "INSERT INTO relopsa.categorias (codigo, nombre) VALUES (?,?)";
        if (txtCodigoCat.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese CÃ³digo", "Advertencia", JOptionPane.ERROR_MESSAGE);
            this.txtCodigoCat.requestFocus();
        } else if (txtNombreCat.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese Nombre", "Advertencia", JOptionPane.ERROR_MESSAGE);
            this.txtNombreCat.requestFocus();
        } else {
            try {
                PreparedStatement statement = conGuardar.connetion().prepareStatement(querty);

                statement.setString(1, txtCodigoCat.getText());
                statement.setString(2, txtNombreCat.getText());
                statement.executeUpdate();
                JOptionPane.showMessageDialog(null, "Categoria ingresado");
                limpiar();

            } catch (SQLException e) {
                System.out.println(e.getMessage() + e);
                JOptionPane.showMessageDialog(null, "Insercion no exitosa!", "Error", JOptionPane.ERROR);
            } finally {
                try {
                    conGuardar.closeConnection();
                    System.err.println("Conexion guardar categoria cerrada");
                } catch (SQLException ex) {
                    System.err.println(ex);
                    Logger.getLogger(Categorias.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
        listarDatos();
    }
    
    public final void listarDatos() {
        DBConnection conListar = new DBConnection();
        DefaultTableModel tableModel = new DefaultTableModel();

        tableModel.addColumn("ID");
        tableModel.addColumn("CÃ³digo");
        tableModel.addColumn("Nombre");
        tableCategoria.setModel(tableModel);
        
        //        ocultamos la columna ID
        tableCategoria.getColumnModel().getColumn(0).setMaxWidth(0);
        tableCategoria.getColumnModel().getColumn(0).setMinWidth(0);
        tableCategoria.getColumnModel().getColumn(0).setPreferredWidth(0);
        
          TableRowSorter<TableModel> ordertable = new TableRowSorter<>(tableModel);
            tableCategoria.setRowSorter(ordertable);
            this.tableCategoria.setModel(tableModel);

        String querty = "SELECT * FROM relopsa.categorias";
        String datos[] = new String[3];

        try {
            Statement st = conListar.connetion().createStatement();
            ResultSet rs = st.executeQuery(querty);
           
            while (rs.next()) {
                datos[0] = rs.getString(1);
                datos[1] = rs.getString(2);
                datos[2] = rs.getString(3);
                tableModel.addRow(datos);
            
            }
            tableCategoria.setModel(tableModel);

        } catch (SQLException e) {
            System.out.println(e.getMessage() + e);
            JOptionPane.showMessageDialog(null, "Insercion!", "Error", JOptionPane.ERROR);
        } finally {
            try {
                conListar.closeConnection();
                System.err.println("Conexion listar categoria cerrada");
            } catch (SQLException ex) {
                Logger.getLogger(Categorias.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    
    public void editarDatos(){
        
        DBConnection conEditar = new DBConnection();
        String querty = "UPDATE relopsa.categorias SET codigo=?, nombre=? WHERE categorias_id=?";
        
       if(txtIDCategoria.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Seleccione una categoria", "Advertencia", JOptionPane.ERROR_MESSAGE);
            limpiar();
            txtCodigoCat.requestFocus();
        } else {
            try {
                PreparedStatement statement = conEditar.connetion().prepareStatement(querty);
                
                statement.setString(1, txtCodigoCat.getText());
                statement.setString(2, txtNombreCat.getText());
                statement.setString(3, txtIDCategoria.getText());
                
                statement.executeUpdate();
               // System.err.println(querty);
                JOptionPane.showMessageDialog(null, "Categoria Modificada!");
                listarDatos();
                limpiar();
            } catch (SQLException e) {
                System.out.println(e.getMessage());
                JOptionPane.showMessageDialog(null, "NO Existe Categoria");
            } finally {
                try {
                    conEditar.closeConnection();
                    System.err.println("Conexion editar categoria cerrada");
                } catch (SQLException ex) {
                    Logger.getLogger(Categorias.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        }
    }
    
    public void eliminarDatos() {
        DBConnection conDelete = new DBConnection();
        String id = txtIDCategoria.getText();
        String querty = "DELETE FROM relopsa.categorias WHERE categorias_id=?";

        if (txtIDCategoria.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Seleccione una categoria", "Advertencia", JOptionPane.ERROR_MESSAGE);
            limpiar();
            txtCodigoCat.requestFocus();
        } else {
            int option = JOptionPane.showConfirmDialog(null, "Desea elminar esta categoria ?", "Eliminar", JOptionPane.YES_NO_OPTION);

            if (option == 0) {

                try {
                    PreparedStatement statement = conDelete.connetion().prepareStatement(querty);
                    statement.setString(1, id);
                    statement.executeLargeUpdate();
                    JOptionPane.showMessageDialog(null, "Categoria eliminada");
                    limpiar();
                    btnGuardarCat.setEnabled(true);
                    listarDatos();
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "No se pudo eliminar");
                } finally {
                    try {
                        conDelete.closeConnection();
                    } catch (SQLException ex) {
                        Logger.getLogger(Categorias.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            } else {
                limpiar();
                btnGuardarCat.setEnabled(true);
            }

        }
    }

    private void limpiar() {
        txtCodigoCat.setText("");
        txtNombreCat.setText("");
        txtIDCategoria.setText("");
    }
    
      public final void dobleClickTabla() {

        tableCategoria.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    //System.err.println("Dos clicks");
                    btnGuardarCat.setEnabled(false);

                    int fila = tableCategoria.getSelectedRow();
                    // System.err.println("fila: " + fila);
                    txtIDCategoria.setText(tableCategoria.getValueAt(fila, 0).toString());
                    txtCodigoCat.setText(tableCategoria.getValueAt(fila, 1).toString());
                    txtNombreCat.setText(tableCategoria.getValueAt(fila, 2).toString());
                }
            }
        });
    }
}
