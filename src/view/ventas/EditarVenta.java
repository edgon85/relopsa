package view.ventas;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
import connection.DBConnection;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.ModelUniversal;
import view.principal.PrincipalAdmin;
import view.ventas.ListarVentas;

/**
 *
 * @author gonza
 */
public class EditarVenta extends javax.swing.JInternalFrame {

    ModelUniversal modelUniversal = new ModelUniversal();
    DefaultTableModel tableModel;
    double impuesto = Double.parseDouble(PrincipalAdmin.txtImpuesto.getText());

    static double total = 0.0;
    double sub_total = 0.0;
    double iva = 0.0;

    public EditarVenta() {
        initComponents();
        this.setTitle("Generar Venta");
//        fechaActual();
        txtNitVentas.setEditable(false);
        txtNombreVentas.setEditable(false);
        txtDireccionVentas.setEditable(false);
        txtTelVentas.setEditable(false);
        txtNumVentas.setEditable(false);
        txtIdProducto.setVisible(false);

        jComboBoxTipoDoc.addItem("Factura");
        jComboBoxTipoDoc.addItem("Boleta");

        jComboFormaPago.addItem("Contado");
        jComboFormaPago.addItem("Credito");
        txtIdVenta.setVisible(false);
        txtIdProducto.setVisible(false);
        lbIdCliente.setVisible(false);
        lbIdVenta.setVisible(false);
        txt_id_cliente.setVisible(false);

        btnEditarProducto.setVisible(false);
        btnCancelarProducto.setVisible(false);

        txtCodigoVentas.setEditable(false);
        txtnombreVentasProducto.setEditable(false);
        txtstockVentas.setEditable(false);
        txtPrecioVentas.setEditable(false);
        txtCantidadVentas.setEditable(false);

        txtSubTotal.setEditable(false);
        txtIva.setEditable(false);
        txtTotal.setEditable(false);
        txtNumProductos.setEditable(false);

        listarDetalleVenta();

//        numeroVenta();
//        obtenerSerie();
//        autoincremetarSerie();
//        lastId();
//        modelUniversal.ocultarColumnas(tableVentas, 5);
//        modelUniversal.ocultarColumnas(tableVentas, 6);
//        modelUniversal.ocultarColumnas(tableVentas, 7);
        dobleClickTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroupProductos = new javax.swing.ButtonGroup();
        jDialogClientes = new javax.swing.JDialog();
        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        txtNitVentas = new javax.swing.JTextField();
        txtNombreVentas = new javax.swing.JTextField();
        txtDireccionVentas = new javax.swing.JTextField();
        txtTelVentas = new javax.swing.JTextField();
        btnBuscarCliente = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jComboBoxTipoDoc = new javax.swing.JComboBox<>();
        txtSerieVenta = new javax.swing.JTextField();
        jComboFormaPago = new javax.swing.JComboBox<>();
        jDateFechaVenta = new com.toedter.calendar.JDateChooser();
        jLabel16 = new javax.swing.JLabel();
        txtNumVentas = new javax.swing.JTextField();
        txtIdVenta = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        txtNumDocVenta = new javax.swing.JTextField();
        txt_id_cliente = new javax.swing.JTextField();
        lbIdCliente = new javax.swing.JLabel();
        lbIdVenta = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtCodigoVentas = new javax.swing.JTextField();
        txtnombreVentasProducto = new javax.swing.JTextField();
        txtstockVentas = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        txtPrecioVentas = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        txtCantidadVentas = new javax.swing.JTextField();
        btnBuscarProducto = new javax.swing.JButton();
        btnAgregarProducto = new javax.swing.JButton();
        btnQuitarProducto = new javax.swing.JButton();
        btnEditarProducto = new javax.swing.JButton();
        btnCancelarProducto = new javax.swing.JButton();
        txtIdProducto = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableVentas = new org.jdesktop.swingx.JXTable();
        jPanel6 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        txtSubTotal = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        txtIva = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtNumProductos = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        btnCancelarCompra = new javax.swing.JButton();
        btnRegistrarCompra = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialogClientesLayout = new javax.swing.GroupLayout(jDialogClientes.getContentPane());
        jDialogClientes.getContentPane().setLayout(jDialogClientesLayout);
        jDialogClientesLayout.setHorizontalGroup(
            jDialogClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialogClientesLayout.setVerticalGroup(
            jDialogClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setClosable(true);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel9.setText("Nit");

        jLabel10.setText("Nombre:");

        jLabel11.setText("Direccion:");

        jLabel12.setText("Tel√©fono");

        txtNitVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtNombreVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDireccionVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtTelVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnBuscarCliente.setText("Buscar");
        btnBuscarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarClienteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDireccionVentas))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNitVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNombreVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTelVentas)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnBuscarCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 63, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtNitVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addComponent(txtNombreVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12)
                    .addComponent(txtTelVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11)
                            .addComponent(txtDireccionVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnBuscarCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel1.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 150, 750, 90));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel1.setText("Documento: ");

        jLabel2.setText("Serie /  N. Doc");

        jLabel3.setText("Forma de pago: ");

        jLabel4.setText("Fecha:");

        jComboBoxTipoDoc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jComboBoxTipoDocItemStateChanged(evt);
            }
        });

        txtSerieVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jDateFechaVenta.setDateFormatString("dd/MM/yyyy");

        jLabel16.setText("Venta No.");

        txtNumVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jLabel25.setText("-");

        txtNumDocVenta.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lbIdCliente.setText("Id Cliente");

        lbIdVenta.setText("Id Venta");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtSerieVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel25)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumDocVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 10, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jDateFechaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(77, 77, 77)
                        .addComponent(lbIdCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_id_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lbIdVenta)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtIdVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(txtNumVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxTipoDoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(txtSerieVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel25)
                    .addComponent(txtNumDocVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtIdVenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txt_id_cliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(lbIdCliente)
                        .addComponent(lbIdVenta))
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(jLabel3)
                        .addComponent(jComboFormaPago, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jDateFechaVenta, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(10, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 20, 750, 100));

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel5.setText("Codigo:");

        jLabel6.setText("Nombre:");

        jLabel7.setText("Stock:");

        jLabel8.setText("Precio:");

        txtCodigoVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCodigoVentas.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCodigoVentasFocusLost(evt);
            }
        });

        txtstockVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jTextField8.setText("jTextField4");

        jLabel13.setText("Cantidad:");

        txtPrecioVentas.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel14.setText("Cantidad:");

        txtCantidadVentas.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        btnBuscarProducto.setText("Buscar");
        btnBuscarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarProductoActionPerformed(evt);
            }
        });

        btnAgregarProducto.setText("Agregar");
        btnAgregarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarProductoActionPerformed(evt);
            }
        });

        btnQuitarProducto.setText("Quitar");
        btnQuitarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnQuitarProductoActionPerformed(evt);
            }
        });

        btnEditarProducto.setText("Editar");
        btnEditarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarProductoActionPerformed(evt);
            }
        });

        btnCancelarProducto.setText("Cancelar");
        btnCancelarProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarProductoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel13)
                        .addGap(315, 315, 315)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtstockVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCodigoVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(24, 24, 24)
                                .addComponent(jLabel14)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCantidadVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtPrecioVentas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtnombreVentasProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(btnBuscarProducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnAgregarProducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnQuitarProducto))
                            .addGroup(jPanel5Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnEditarProducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnCancelarProducto)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnBuscarProducto)
                        .addComponent(btnAgregarProducto)
                        .addComponent(btnQuitarProducto))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(txtCodigoVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel6)
                        .addComponent(txtnombreVentasProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(txtstockVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel8)
                        .addComponent(txtPrecioVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel14)
                        .addComponent(txtCantidadVentas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnCancelarProducto)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnEditarProducto)
                        .addComponent(txtIdProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(87, 87, 87)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 750, 100));

        tableVentas = new org.jdesktop.swingx.JXTable(){
            public boolean isCellEditable(int rowIndex, int colIndex){
                return false;
            }
        };
        tableVentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableVentas.setFocusable(false);
        jScrollPane1.setViewportView(tableVentas);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 380, 750, 140));

        jPanel6.setBackground(new java.awt.Color(255, 255, 255));
        jPanel6.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        jLabel19.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(0, 0, 0));
        jLabel19.setText("Sub Total:");

        txtSubTotal.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        txtSubTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel20.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(0, 0, 0));
        jLabel20.setText("IVA");

        txtIva.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        txtIva.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel21.setFont(new java.awt.Font("Dialog", 1, 24)); // NOI18N
        jLabel21.setForeground(new java.awt.Color(0, 0, 0));
        jLabel21.setText("Total:");

        txtTotal.setFont(new java.awt.Font("Dialog", 0, 24)); // NOI18N
        txtTotal.setForeground(new java.awt.Color(255, 51, 51));
        txtTotal.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel22.setText("productos agregados");

        txtNumProductos.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jLabel22))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(txtNumProductos, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel20)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel21)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20)
                        .addComponent(txtIva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel21)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSubTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel19))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumProductos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 530, 750, 60));

        jPanel7.setBackground(new java.awt.Color(255, 255, 255));
        jPanel7.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));

        btnCancelarCompra.setText("Cancelar");
        btnCancelarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarCompraActionPerformed(evt);
            }
        });

        btnRegistrarCompra.setText("Registar Venta");
        btnRegistrarCompra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarCompraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap(523, Short.MAX_VALUE)
                .addComponent(btnRegistrarCompra)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnCancelarCompra)
                .addGap(24, 24, 24))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelarCompra)
                    .addComponent(btnRegistrarCompra))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.add(jPanel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 600, 750, 50));

        jLabel17.setText("Datos Cliente");
        jPanel1.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, -1));

        jLabel23.setText("Datos de venta");
        jPanel1.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 0, -1, -1));

        jLabel24.setText("Datos Producto");
        jPanel1.add(jLabel24, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 772, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarClienteActionPerformed
        abrirJDialogClientes();
    }//GEN-LAST:event_btnBuscarClienteActionPerformed

    private void btnBuscarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarProductoActionPerformed

        abrirJDialogProductos();
    }//GEN-LAST:event_btnBuscarProductoActionPerformed

    private void btnAgregarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarProductoActionPerformed
        if (txtCodigoVentas.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Seleccione un producto", "Advertencia", JOptionPane.WARNING_MESSAGE);
            btnBuscarProducto.requestFocus();
        } else if (txtCantidadVentas.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Ingrese cantidad", "Advertencia", JOptionPane.WARNING_MESSAGE);
            txtCantidadVentas.requestFocus();
        } else {
            agregarProductoTabla();
            txtCodigoVentas.setText("");
            txtnombreVentasProducto.setText("");
            txtstockVentas.setText("");
            txtPrecioVentas.setText("");
            txtCantidadVentas.setText("");

            txtPrecioVentas.setEditable(false);
            txtCantidadVentas.setEditable(false);
            btnCancelarProducto.setVisible(false);
        }
    }//GEN-LAST:event_btnAgregarProductoActionPerformed

    private void btnQuitarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnQuitarProductoActionPerformed
        quitarProducto();
        txtCodigoVentas.setText("");
        txtnombreVentasProducto.setText("");
        txtstockVentas.setText("");
        txtPrecioVentas.setText("");
        txtCantidadVentas.setText("");

        btnEditarProducto.setVisible(false);
        btnCancelarProducto.setVisible(false);
        btnAgregarProducto.setEnabled(true);

    }//GEN-LAST:event_btnQuitarProductoActionPerformed

    private void btnEditarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarProductoActionPerformed
        editarProducto();
        txtCodigoVentas.setText("");
        txtnombreVentasProducto.setText("");
        txtstockVentas.setText("");
        txtPrecioVentas.setText("");
        txtCantidadVentas.setText("");

        btnEditarProducto.setVisible(false);
        btnCancelarProducto.setVisible(false);
        btnAgregarProducto.setEnabled(true);

        btnBuscarProducto.requestFocus();
    }//GEN-LAST:event_btnEditarProductoActionPerformed

    private void btnCancelarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarCompraActionPerformed
        total = 0.0;
        sub_total = 0.0;
        iva = 0.0;
        this.dispose();
    }//GEN-LAST:event_btnCancelarCompraActionPerformed

    private void txtCodigoVentasFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoVentasFocusLost

    }//GEN-LAST:event_txtCodigoVentasFocusLost

    private void btnCancelarProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarProductoActionPerformed
        txtCodigoVentas.setText("");
        txtnombreVentasProducto.setText("");
        txtstockVentas.setText("");
        txtPrecioVentas.setText("");
        txtCantidadVentas.setText("");

        txtPrecioVentas.setEditable(false);
        txtCantidadVentas.setEditable(false);

        btnEditarProducto.setVisible(false);
        btnCancelarProducto.setVisible(false);

        btnBuscarProducto.requestFocus();

        btnAgregarProducto.setEnabled(true);
    }//GEN-LAST:event_btnCancelarProductoActionPerformed

    private void btnRegistrarCompraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarCompraActionPerformed
        registrarVenta();
        JOptionPane.showMessageDialog(null, "Venta actualizada :D");
        this.dispose();
    }//GEN-LAST:event_btnRegistrarCompraActionPerformed

    private void txtTelComprasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTelComprasActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTelComprasActionPerformed

    private void jComboBoxTipoDocItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jComboBoxTipoDocItemStateChanged
//        obtenerSerie();
//        autoincremetarSerie();
    }//GEN-LAST:event_jComboBoxTipoDocItemStateChanged


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregarProducto;
    private javax.swing.JButton btnBuscarCliente;
    public static javax.swing.JButton btnBuscarProducto;
    private javax.swing.JButton btnCancelarCompra;
    public static javax.swing.JButton btnCancelarProducto;
    public static javax.swing.JButton btnEditarProducto;
    private javax.swing.JButton btnQuitarProducto;
    private javax.swing.JButton btnRegistrarCompra;
    private javax.swing.ButtonGroup buttonGroupProductos;
    public static javax.swing.JComboBox<String> jComboBoxTipoDoc;
    public static javax.swing.JComboBox<String> jComboFormaPago;
    public static com.toedter.calendar.JDateChooser jDateFechaVenta;
    public static javax.swing.JDialog jDialogClientes;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JLabel lbIdCliente;
    private javax.swing.JLabel lbIdVenta;
    public static org.jdesktop.swingx.JXTable tableVentas;
    public static javax.swing.JTextField txtCantidadVentas;
    public static javax.swing.JTextField txtCodigoVentas;
    public static javax.swing.JTextField txtDireccionVentas;
    public static javax.swing.JTextField txtIdProducto;
    public static javax.swing.JTextField txtIdVenta;
    private javax.swing.JTextField txtIva;
    public static javax.swing.JTextField txtNitVentas;
    public static javax.swing.JTextField txtNombreVentas;
    public static javax.swing.JTextField txtNumDocVenta;
    private javax.swing.JTextField txtNumProductos;
    public static javax.swing.JTextField txtNumVentas;
    public static javax.swing.JTextField txtPrecioVentas;
    public static javax.swing.JTextField txtSerieVenta;
    private javax.swing.JTextField txtSubTotal;
    public static javax.swing.JTextField txtTelVentas;
    private javax.swing.JTextField txtTotal;
    public static javax.swing.JTextField txt_id_cliente;
    public static javax.swing.JTextField txtnombreVentasProducto;
    public static javax.swing.JTextField txtstockVentas;
    // End of variables declaration//GEN-END:variables

    private void listarDetalleVenta() {
        DBConnection conListar = new DBConnection();
        DefaultTableModel tableModel = new DefaultTableModel();
        int filaSelected = ListarVentas.tableListaVentas.getSelectedRow();

        String quertyEC = "select p.codigo as codigo, p.nombre, det.cantidad, det.precio_venta, det.cantidad * det.precio_venta as importe, p.cantidad as Stock, det.ventas_id as Ventas_id, p.productos_id as Prod_id, det.detalleVenta_id as det_id from detalleVenta as det inner join productos as p on det.productos_id = p.productos_id inner join ventas as c on det.ventas_id = c.ventas_id where c.num_venta="
                + ListarVentas.tableListaVentas.getValueAt(filaSelected, 1).toString();

        //System.out.println(quertyEC);
        tableModel.addColumn("Codigo");
        tableModel.addColumn("nombre");
        tableModel.addColumn("Cantidad");
        tableModel.addColumn("P.Unit");
        tableModel.addColumn("Importe");
        tableModel.addColumn("Stock");
        tableModel.addColumn("Venta ID");
        tableModel.addColumn("Prod Id");
        tableModel.addColumn("Venta det Id");
        tableVentas.setModel(tableModel);

        modelUniversal.ocultarColumnas(tableVentas, 5);
        modelUniversal.ocultarColumnas(tableVentas, 6);
        modelUniversal.ocultarColumnas(tableVentas, 7);
        modelUniversal.ocultarColumnas(tableVentas, 8);

        String datosEC[] = new String[9];
        String datosTotal[] = new String[1];

        try {
            Statement st = conListar.connetion().createStatement();
            ResultSet rsEC = st.executeQuery(quertyEC);

            while (rsEC.next()) {
                datosEC[0] = rsEC.getString(1);
                datosEC[1] = rsEC.getString(2);
                datosEC[2] = rsEC.getString(3);
                datosEC[3] = rsEC.getString(4);
                datosEC[4] = rsEC.getString(5);
                datosEC[5] = rsEC.getString(6);
                datosEC[6] = rsEC.getString(7);
                datosEC[7] = rsEC.getString(8);
                datosEC[8] = rsEC.getString(9);
                tableModel.addRow(datosEC);
            }
            tableVentas.setModel(tableModel);

            String quertyTolat = "select sum(det.cantidad * det.precio_venta) as total from detalleVenta as det inner join ventas as c on det.ventas_id = c.ventas_id where c.num_venta="
                    + ListarVentas.tableListaVentas.getValueAt(filaSelected, 1).toString();

            ResultSet rsTotal = st.executeQuery(quertyTolat);

            while (rsTotal.next()) {
                datosTotal[0] = rsTotal.getString(1);
            }

            if (ListarVentas.tableListaVentas.getValueAt(filaSelected, 2).toString().equals("Factura")) {
                double subTotal = Double.parseDouble(datosTotal[0]);
                double iva = (subTotal * impuesto);
                double total = subTotal + iva;//Integer.parseInt(datosTotal[0]);

                txtSubTotal.setText(modelUniversal.formatoDecimal(subTotal));
                txtIva.setText(modelUniversal.formatoDecimal(iva));
                txtTotal.setText(modelUniversal.formatoDecimal(total));

            } else if (ListarVentas.tableListaVentas.getValueAt(filaSelected, 2).toString().equals("Boleta")) {
                double subTotal = Double.parseDouble(datosTotal[0]);
                double iva = (subTotal * 0);
                double total = subTotal;

                txtSubTotal.setText(modelUniversal.formatoDecimal(subTotal));
                txtIva.setText(modelUniversal.formatoDecimal(iva));
                txtTotal.setText(modelUniversal.formatoDecimal(total));
            }

        } catch (SQLException e) {
            System.out.println(e.getMessage() + e);
            JOptionPane.showMessageDialog(null, "Insercion!", "Error", JOptionPane.ERROR);
        } finally {
            try {
                conListar.closeConnection();
                System.err.println("Conexion listar detalleCompra cerrada");
            } catch (SQLException ex) {
                Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        txtNumProductos.setText("" + modelUniversal.numeroDatosTabla(tableVentas));
    }

    private void abrirJDialogClientes() {
        (new jDialogBuscarClienteEditar(jDialogClientes, true)).setVisible(true);
    }

    private void abrirJDialogProductos() {
        (new JDialogBuscarProductoVEditar(jDialogClientes, true)).setVisible(true);
    }

    private void agregarProductoTabla() {
        tableModel = (DefaultTableModel) tableVentas.getModel();
        String codigo = txtCodigoVentas.getText();
        String nombre = txtnombreVentasProducto.getText();
        String cantidad = txtCantidadVentas.getText();
        String precio = txtPrecioVentas.getText();
        String stock = txtstockVentas.getText();
        String idCompra = txtIdVenta.getText();
        String idProdcuto = txtIdProducto.getText();

        double subTotal = Double.parseDouble(txtSubTotal.getText());
        double ivaActual;
        double totalActual;

        int cant = Integer.parseInt(cantidad);
        double prec = Double.parseDouble(precio);
        double importe = cant * prec;

        if (jComboBoxTipoDoc.getSelectedItem().equals("Factura")) {
            Object fila[] = new Object[8];
            fila[0] = codigo;
            fila[1] = nombre;
            fila[2] = cantidad;
            fila[3] = precio;
            fila[4] = importe;
            fila[5] = stock;
            fila[6] = idCompra;
            fila[7] = idProdcuto;
            tableModel.addRow(fila);
            tableVentas.setModel(tableModel);

            subTotal = subTotal + importe;
            ivaActual = subTotal * impuesto;
            totalActual = subTotal + ivaActual;

            registrarDetalleVenta();
            sub_total = subTotal;
            iva = ivaActual;
            total = totalActual;

            txtSubTotal.setText(modelUniversal.formatoDecimal(sub_total));
            txtIva.setText(modelUniversal.formatoDecimal(iva));
            txtTotal.setText(modelUniversal.formatoDecimal(total));

            txtNumProductos.setText("" + modelUniversal.numeroDatosTabla(tableVentas));
        } else if (jComboBoxTipoDoc.getSelectedItem().equals("Boleta")) {
            Object fila[] = new Object[8];
            fila[0] = codigo;
            fila[1] = nombre;
            fila[2] = cantidad;
            fila[3] = precio;
            fila[4] = importe;
            fila[5] = stock;
            fila[6] = idCompra;
            fila[7] = idProdcuto;
            tableModel.addRow(fila);
            tableVentas.setModel(tableModel);

            subTotal = subTotal + importe;
            ivaActual = subTotal * 0;
            totalActual = subTotal + ivaActual;

            registrarDetalleVenta();
            sub_total = subTotal;
            iva = ivaActual;
            total = totalActual;

            txtSubTotal.setText(modelUniversal.formatoDecimal(sub_total));
            txtIva.setText(modelUniversal.formatoDecimal(iva));
            txtTotal.setText(modelUniversal.formatoDecimal(total));

            txtNumProductos.setText("" + modelUniversal.numeroDatosTabla(tableVentas));

        }
    }

    private void quitarProducto() {
        tableModel = (DefaultTableModel) tableVentas.getModel();

        double totalActual = 0.0;
        double ivaActual = 0.0;
        double subTotalActual = 0.0;
        double importe = 0.0;

        int fila = tableVentas.getSelectedRow();

        if (fila == -1) {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un producto de la tabla", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            int confirmar = JOptionPane.showConfirmDialog(null, "¬øEsta seguro de eliminar este producto?", "Eliminar", JOptionPane.YES_NO_OPTION);
            if (confirmar == JOptionPane.YES_OPTION) {

                if (jComboBoxTipoDoc.getSelectedItem().equals("Factura")) {
                    importe = Double.parseDouble(tableVentas.getValueAt(fila, 4).toString());
                    subTotalActual = Double.parseDouble(txtSubTotal.getText()) - importe;

                    ivaActual = subTotalActual * impuesto;
                    totalActual = subTotalActual + ivaActual;

                    sub_total = subTotalActual;
                    iva = ivaActual;
                    total = totalActual;

                    eliminarProducto(fila);

                    txtSubTotal.setText("" + sub_total);
                    txtIva.setText("" + iva);
                    txtTotal.setText("" + total);

                    tableModel.removeRow(fila);
                } else if (jComboBoxTipoDoc.getSelectedItem().equals("Boleta")) {
                    importe = Double.parseDouble(tableVentas.getValueAt(fila, 4).toString());
                    subTotalActual = Double.parseDouble(txtSubTotal.getText()) - importe;

                    ivaActual = subTotalActual * 0;
                    totalActual = subTotalActual + ivaActual;

                    eliminarProducto(fila);

                    sub_total = subTotalActual;
                    iva = ivaActual;
                    total = totalActual;

                    txtSubTotal.setText(modelUniversal.formatoDecimal(sub_total));
                    txtIva.setText(modelUniversal.formatoDecimal(iva));
                    txtTotal.setText(modelUniversal.formatoDecimal(total));

                    tableModel.removeRow(fila);
                }
            }
        }
        txtNumProductos.setText("" + modelUniversal.numeroDatosTabla(tableVentas));
    }

    private void eliminarProducto(int fila) {
        DBConnection conDelete = new DBConnection();
        String querty = "delete from detalleVenta where detalleVenta_id=?";
        String quertyUpdate = "update productos set cantidad=? where productos_id=?";

        try {
            int stock = Integer.valueOf(tableVentas.getValueAt(fila, 5).toString());
            int cantidadEliminada = Integer.valueOf(tableVentas.getValueAt(fila, 2).toString());

            stock = stock + cantidadEliminada;

            System.err.println(stock);

            PreparedStatement statement = conDelete.connetion().prepareStatement(quertyUpdate);
            statement.setInt(1, stock);
            statement.setInt(2, Integer.valueOf(tableVentas.getValueAt(fila, 7).toString()));
            statement.executeLargeUpdate();

        } catch (SQLException ex) {
            System.err.println("No se puede eliminar: " + ex.getMessage());
        } finally {
            try {
                conDelete.closeConnection();
            } catch (SQLException ex) {
                Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        //----------------------------
        try {
            PreparedStatement statement = conDelete.connetion().prepareStatement(querty);
            statement.setString(1, tableVentas.getValueAt(fila, 8).toString());
            statement.executeLargeUpdate();

        } catch (SQLException ex) {
            //  JOptionPane.showMessageDialog(null, "No se pudo eliminar producto");
            System.err.println("No se puede eliminar: " + ex.getMessage());
        } finally {
            try {
                conDelete.closeConnection();
            } catch (SQLException ex) {
                Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void actualizarProducto(int fila, int cantidadActual) {
        DBConnection conUpdate = new DBConnection();
        int cantidadNueva = Integer.valueOf(txtCantidadVentas.getText());
        int stock = Integer.valueOf(tableVentas.getValueAt(fila, 5).toString());

        System.out.println("cantidad nueva = " + cantidadNueva);
        System.out.println("cantidad actual = " + cantidadActual);

        if (cantidadNueva > cantidadActual) {
            int c = cantidadNueva - cantidadActual;
            stock = stock - c;

            String quertyStock = "update productos set cantidad=? where productos_id=?";
            String quertyCant = "update detalleVenta set cantidad=? where detalleVenta_id=?";
            try {
                PreparedStatement statement = conUpdate.connetion().prepareStatement(quertyStock);
                statement.setInt(1, stock);
                statement.setInt(2, Integer.valueOf(tableVentas.getValueAt(fila, 7).toString()));
                statement.executeLargeUpdate();
                tableModel.setValueAt(stock, fila, 5);

            } catch (SQLException ex) {
                System.err.println("No se puede actualizar: " + ex.getMessage());
            } finally {
                try {
                    conUpdate.closeConnection();
                    System.err.println("Conexion cerrada...");
                } catch (SQLException ex) {
                    Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try {
                PreparedStatement statement = conUpdate.connetion().prepareStatement(quertyCant);
                statement.setInt(1, cantidadNueva);
                statement.setInt(2, Integer.valueOf(tableVentas.getValueAt(fila, 8).toString()));
                statement.executeLargeUpdate();

            } catch (SQLException ex) {
                System.err.println("No se puede actualizar: " + ex.getMessage());
            } finally {
                try {
                    conUpdate.closeConnection();
                    System.err.println("Conexion cerrada...");
                } catch (SQLException ex) {
                    Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (cantidadNueva < cantidadActual) {
            int c = cantidadActual - cantidadNueva;
            stock = stock + c;

            String quertyStock = "update productos set cantidad=? where productos_id=?";
            String quertyCant = "update detalleVenta set cantidad=? where detalleVenta_id=?";
            try {
                PreparedStatement statement = conUpdate.connetion().prepareStatement(quertyStock);
                statement.setInt(1, stock);
                statement.setInt(2, Integer.valueOf(tableVentas.getValueAt(fila, 7).toString()));
                statement.executeLargeUpdate();

                tableModel.setValueAt(stock, fila, 5);
            } catch (SQLException ex) {
                System.err.println("No se puede actualizar: " + ex.getMessage());
            } finally {
                try {
                    conUpdate.closeConnection();
                    System.err.println("Conexion cerrada...");
                } catch (SQLException ex) {
                    Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
            try {
                PreparedStatement statement = conUpdate.connetion().prepareStatement(quertyCant);
                statement.setInt(1, cantidadNueva);
                statement.setInt(2, Integer.valueOf(tableVentas.getValueAt(fila, 8).toString()));
                statement.executeLargeUpdate();

            } catch (SQLException ex) {
                System.err.println("No se puede actualizar: " + ex.getMessage());
            } finally {
                try {
                    conUpdate.closeConnection();
                } catch (SQLException ex) {
                    Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
                }
            }

        }
    }

    private void editarProducto() {
        tableModel = (DefaultTableModel) tableVentas.getModel();
        double totalActual = 0.0;
        double ivaActual = 0.0;
        double subTotalActual = Double.parseDouble(txtSubTotal.getText().toString());

        double importe_nuevo = 0.0;

        int fila = tableVentas.getSelectedRow();

        double importe_actual = Double.parseDouble(tableVentas.getValueAt(fila, 4).toString());
        int cantidad_actual = Integer.parseInt(tableVentas.getValueAt(fila, 2).toString());
        int cantidad_nueva = Integer.parseInt(txtCantidadVentas.getText());
        double precio_actual = Double.parseDouble(tableVentas.getValueAt(fila, 3).toString());
        double precio_nuevo = Double.parseDouble(txtPrecioVentas.getText().toString());

        if (jComboBoxTipoDoc.getSelectedItem().equals("Factura")) {
            if (cantidad_nueva != cantidad_actual || precio_nuevo != precio_actual) {

                importe_nuevo = cantidad_nueva * precio_nuevo;

                tableModel.setValueAt(cantidad_nueva, fila, 2);
                tableModel.setValueAt(precio_nuevo, fila, 3);
                tableModel.setValueAt(importe_nuevo, fila, 4);

                subTotalActual = subTotalActual - importe_actual;

                subTotalActual = subTotalActual + importe_nuevo;

                ivaActual = subTotalActual * impuesto;
                totalActual = subTotalActual + ivaActual;
                iva = ivaActual;
                sub_total = subTotalActual;
                total = totalActual;

                actualizarProducto(fila, cantidad_actual);

                txtSubTotal.setText(modelUniversal.formatoDecimal(sub_total));
                txtIva.setText(modelUniversal.formatoDecimal(iva));
                txtTotal.setText(modelUniversal.formatoDecimal(total));
            } else {
                txtCodigoVentas.setText("");
                txtnombreVentasProducto.setText("");
                txtstockVentas.setText("");
                txtPrecioVentas.setText("");
                txtCantidadVentas.setText("");

                txtPrecioVentas.setEditable(false);
                txtCantidadVentas.setEditable(false);

                btnCancelarProducto.setVisible(false);
                btnEditarProducto.setVisible(false);
            }
        } else if (jComboBoxTipoDoc.getSelectedItem().equals("Boleta")) {
            if (cantidad_nueva != cantidad_actual || precio_nuevo != precio_actual) {

                importe_nuevo = cantidad_nueva * precio_nuevo;

                tableModel.setValueAt(cantidad_nueva, fila, 2);
                tableModel.setValueAt(precio_nuevo, fila, 3);
                tableModel.setValueAt(importe_nuevo, fila, 4);

                subTotalActual = subTotalActual - importe_actual;
                subTotalActual = subTotalActual + importe_nuevo;
                ivaActual = subTotalActual * 0;
                totalActual = subTotalActual + ivaActual;

                actualizarProducto(fila, cantidad_actual);

                iva = ivaActual;
                sub_total = subTotalActual;
                total = totalActual;

                txtSubTotal.setText(modelUniversal.formatoDecimal(sub_total));
                txtIva.setText(modelUniversal.formatoDecimal(iva));
                txtTotal.setText(modelUniversal.formatoDecimal(total));
            } else {
                txtCodigoVentas.setText("");
                txtnombreVentasProducto.setText("");
                txtstockVentas.setText("");
                txtPrecioVentas.setText("");
                txtCantidadVentas.setText("");

                txtPrecioVentas.setEditable(false);
                txtCantidadVentas.setEditable(false);

                btnCancelarProducto.setVisible(false);
                btnEditarProducto.setVisible(false);
            }
        }
    }

    public final void dobleClickTabla() {

        tableVentas.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                if (e.getClickCount() == 2) {
                    int fila = tableVentas.getSelectedRow();
                    txtCodigoVentas.setText(tableVentas.getValueAt(fila, 0).toString());
                    txtnombreVentasProducto.setText(tableVentas.getValueAt(fila, 1).toString());
                    txtstockVentas.setText(tableVentas.getValueAt(fila, 5).toString());
                    txtPrecioVentas.setText(tableVentas.getValueAt(fila, 3).toString());
                    txtCantidadVentas.setText(tableVentas.getValueAt(fila, 2).toString());

                    txtPrecioVentas.setEditable(true);
                    txtCantidadVentas.setEditable(true);

                    btnEditarProducto.setVisible(true);
                    btnCancelarProducto.setVisible(true);

                    txtCantidadVentas.requestFocus();

                    btnAgregarProducto.setEnabled(false);
                }
            }
        });
    }

    private void registrarVenta() {
        DBConnection conREgistrarVenta = new DBConnection();

        //obtener fecha
        SimpleDateFormat sipleDate = new SimpleDateFormat("dd/MM/YYYY");
        String date = sipleDate.format(jDateFechaVenta.getDate());

        String querty = "UPDATE VENTAS SET forma_pago=?, fecha=STR_TO_DATE(REPLACE(?,'/','.'), GET_FORMAT(date,'EUR')), clientes_id=? WHERE ventas_id=?";

        String forma_pago = jComboFormaPago.getSelectedItem().toString();
        String fecha = date;
        String cliente_id = txt_id_cliente.getText();
        int num_venta = Integer.parseInt(txtIdVenta.getText());

        try {
            PreparedStatement statement = conREgistrarVenta.connetion().prepareStatement(querty);

            statement.setString(1, forma_pago);
            statement.setString(2, fecha);
            statement.setInt(3, Integer.parseInt(cliente_id));
            statement.setInt(4, num_venta);
            statement.executeLargeUpdate();

        } catch (SQLException e) {
            System.out.println(e.getMessage() + e);
        } finally {
            try {
                conREgistrarVenta.closeConnection();
                System.err.println("Conexion cerrada");
            } catch (SQLException ex) {
                System.err.println(ex);
                Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }

    private void registrarDetalleVenta() {
        DBConnection conRegistrar = new DBConnection();
        String querty = "INSERT INTO detalleVenta (cantidad, precio_venta, ventas_id, productos_id) VALUES (?,?,?,?)";
        try {
            PreparedStatement statement = conRegistrar.connetion().prepareStatement(querty);

            statement.setInt(1, Integer.parseInt(txtCantidadVentas.getText()));
            statement.setDouble(2, Double.parseDouble(txtPrecioVentas.getText()));
            statement.setInt(3, Integer.parseInt(txtIdVenta.getText()));
            statement.setInt(4, Integer.parseInt(txtIdProducto.getText()));
            statement.executeUpdate();

        } catch (SQLException ex) {
            System.out.println(ex.getMessage() + ex);
            JOptionPane.showMessageDialog(null, "Insercion no exitosa!", "Error", JOptionPane.ERROR);
        } finally {
            try {
                conRegistrar.closeConnection();
                System.err.println("Conexion generar compras cerrada");
            } catch (SQLException ex) {
                System.err.println(ex);
                Logger.getLogger(EditarVenta.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
}
